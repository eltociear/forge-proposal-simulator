name: "CI"

env:
    FOUNDRY_PROFILE: "ci"

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - "main"

jobs:
   lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Install Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: "Install the Node.js dependencies"
        run: npm install

      - name: Run linter and check for errors
        id: lint
        run: |
          LINT_OUTCOME=$(npm run lint 2>&1 || true) # Prevent the step from failing immediately
          echo "$LINT_OUTCOME"
          echo "LINT_OUTCOME<<EOF" >> $GITHUB_ENV
          echo "$LINT_OUTCOME" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          if echo "$LINT_OUTCOME" | grep -q " error "; then
            echo "## Lint result" >> $GITHUB_STEP_SUMMARY
            echo "❌ Failed due to errors" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "## Lint result" >> $GITHUB_STEP_SUMMARY
            echo "✅ Passed or warnings found" >> $GITHUB_STEP_SUMMARY
          fi
   
    build:
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Build the contracts and print their size"
              run: "forge build --sizes"

            - name: "Add build summary"
              run: |
                  echo "## Build result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

    test:
        needs: ["lint", "build"]
        runs-on: "ubuntu-latest"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              with:
                  submodules: "recursive"

            - name: "Install Foundry"
              uses: "foundry-rs/foundry-toolchain@v1"

            - name: "Show the Foundry config"
              run: "forge config"

            - name:
                  "Generate a fuzz seed that changes weekly to avoid burning through RPC
                  allowance"
              run: >
                  echo "FOUNDRY_FUZZ_SEED=$(
                    echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
                  )" >> $GITHUB_ENV

            - name: "Run the tests"
              run: "forge test"

            - name: "Add test summary"
              run: |
                  echo "## Tests result" >> $GITHUB_STEP_SUMMARY
                  echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
